name: Build release Docker image

on:
  workflow_dispatch:
  push:
    branches:
      - 'main/**'

env:
  DOCKER_IMAGE_NAME: fortest
  DOCKER_REGISTRY_URL: mnouman09

jobs:
  build_docker_images:
    # Job name that shows in the GitHub UI
    name: Build Docker Images
    # Runner to use
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    # - name: Get the release version
    #   # i.e.: release/1.0.0 -> 1.0.0
    #   id: strip-branch-name
    #   run: |
    #     release_version=$(echo "${{ github.ref }}" | sed 's/refs\/heads\/.*\///')
    #     echo "Building release version latest"
    #     echo "RELEASE_VERSION=latest" >> $GITHUB_ENV
    #     shell: bash
    - name: Login to dockerhub
      uses: docker/login-action@v3
      with:
       username: ${{ secrets.DOCKERHUB_USERNAME }}
       password: ${{ secrets.DOCKERHUB_PASSWORD }}

       
    # Build the Docker image
    - name: Build the Docker image
      run: docker build . --file Dockerfile --tag $DOCKER_IMAGE_NAME:latest

    # Tag the Docker Images
    - name: Tag the image for the private registry $DOCKER_REGISTRY_URL
      run: docker tag $DOCKER_IMAGE_NAME:latest $DOCKER_REGISTRY_URL/$DOCKER_IMAGE_NAME:latest

    - name: Create a latest image as well
      run: docker tag $DOCKER_IMAGE_NAME:latest $DOCKER_REGISTRY_URL/$DOCKER_IMAGE_NAME:latest

    # # Push the images to the registry
    # - name: Push the Docker image with version number
    #   run: docker push $DOCKER_REGISTRY_URL/$DOCKER_IMAGE_NAME:latest

    - name: Push the latest tag
      run: docker push $DOCKER_REGISTRY_URL/$DOCKER_IMAGE_NAME:latest

    # Remove the local images
    # - name: Remove the Docker image with version number
    #   run: docker rmi $DOCKER_REGISTRY_URL/$DOCKER_IMAGE_NAME:latest

    - name: Remove the Docker image with latest tag
      run: docker rmi $DOCKER_REGISTRY_URL/$DOCKER_IMAGE_NAME:latest

    - name: Remove the local image
      run: docker rmi $DOCKER_IMAGE_NAME:latest
